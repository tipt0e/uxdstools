--- /vicepa/git/uxdstools.git/src/ldap.c	2011-08-15 12:23:29.315092722 -0700
+++ /vicepa/git/uxdstools.git/src/ldap32.c	2011-08-16 10:38:50.217628798 -0700
@@ -222,7 +222,7 @@ int uxds_acct_parse(uxds_bind_t bind, ux
 	    kuser = get_krbname(auth, FALSE);
 	    if (auth.debug)
 		fprintf(stderr,
-			"user account filter half returned: %s, size %lu len %lu\n",
+			"user account filter half returned: %s, size %i len %i\n",
 			kuser, sizeof(kuser), strlen(kuser));
 	    filter = (center(fbuf, "uid=", kuser));
 	    if (auth.debug)
@@ -430,7 +430,7 @@ int uxds_acct_add(uxds_acct_t pxtype, ux
     if (!snprintf(filter, PG_LEN, POSIXGROUP, mdata.group))
 	return 1;
     if (auth.debug)
-	fprintf(stderr, "filter is %s, len %lu\n", filter, strlen(filter));
+	fprintf(stderr, "filter is %s, len %i\n", filter, strlen(filter));
     if (ldap_search_ext_s(ld, NULL, LDAP_SCOPE_SUBTREE, filter, NULL, 0,
 			  NULL, NULL, NULL, 0, &msg)
 	!= LDAP_SUCCESS) {
@@ -465,7 +465,7 @@ int uxds_acct_add(uxds_acct_t pxtype, ux
     vals = ldap_get_values_len(ld, entry, "description");
     if (vals[0]->bv_val != NULL) {
 	if (auth.debug)
-	    fprintf(stderr, "%s : role, len %lu\n", vals[0]->bv_val,
+	    fprintf(stderr, "%s : role, len %i\n", vals[0]->bv_val,
 		    strlen(vals[0]->bv_val));
 	role = strdup(vals[0]->bv_val);
     }
@@ -475,7 +475,7 @@ int uxds_acct_add(uxds_acct_t pxtype, ux
     char *gidnum = NULL;
     if (vals[0]->bv_val != NULL) {
 	if (auth.debug)
-	    fprintf(stderr, "%s : gidNumber, len %lu\n", vals[0]->bv_val,
+	    fprintf(stderr, "%s : gidNumber, len %i\n", vals[0]->bv_val,
 		    strlen(vals[0]->bv_val));
 	gidnum = strdup(vals[0]->bv_val);
     }
@@ -608,7 +608,7 @@ int uxds_acct_add(uxds_acct_t pxtype, ux
 
 	if (ldap_add_ext_s(ld, user_dn, useradd, NULL, NULL) !=
 	    LDAP_SUCCESS) {
-	    fprintf(stderr, "Attempted DN: %s, len %lu\n", user_dn,
+	    fprintf(stderr, "Attempted DN: %s, len %i\n", user_dn,
 		    strlen(user_dn));
 	    ldap_get_option(ld, LDAP_OPT_RESULT_CODE, &rc);
 	    fprintf(stderr, "%s: %s\n", res, ldap_err2string(rc));
@@ -818,7 +818,7 @@ int uxds_acct_del(uxds_acct_t pxtype, ux
 	break;
     }
     if (auth.debug)
-	fprintf(stderr, "search filter used: %s, len %lu\n", filter,
+	fprintf(stderr, "search filter used: %s, len %i\n", filter,
 		strlen(filter));
     if (ldap_search_ext_s(ld, NULL, LDAP_SCOPE_SUBTREE, filter, NULL, 0,
 			  NULL, NULL, NULL, 0, &msg) != LDAP_SUCCESS) {
@@ -941,7 +941,7 @@ int uxds_acct_mod(uxds_acct_t pxtype, ux
     }
 
     if (auth.debug)
-	fprintf(stderr, "filter is %s, len %lu\n", filter, strlen(filter));
+	fprintf(stderr, "filter is %s, len %i\n", filter, strlen(filter));
     if (ldap_search_ext_s(ld, NULL, LDAP_SCOPE_SUBTREE, filter, NULL, 0,
 			  NULL, NULL, NULL, 0, &msg) != LDAP_SUCCESS) {
 	ldap_get_option(ld, LDAP_OPT_RESULT_CODE, &rc);
@@ -1089,7 +1089,7 @@ int uxds_acct_mod(uxds_acct_t pxtype, ux
 #endif				/* HAVE_LDAP_SASL_GSSAPI */
 	if (ldap_modify_ext_s(ld, mod_dn, usermod, NULL, NULL) !=
 	    LDAP_SUCCESS) {
-	    fprintf(stdout, "Attempted DN: %s, len %lu\n", mod_dn,
+	    fprintf(stdout, "Attempted DN: %s, len %i\n", mod_dn,
 		    strlen(mod_dn));
 #ifdef TOOL_LOG
 	    log_event(mod_dn, USER, MOD, "FAILED");
@@ -1678,7 +1678,7 @@ char *build_gecos(uxds_data_t mdata, LDA
         vals = ldap_get_values_len(ld, entry, "givenName");
         if (vals[0]->bv_val != NULL) {
             if (debug)
-                fprintf(stderr, "%s : first name, len %lu\n",
+                fprintf(stderr, "%s : first name, len %i\n",
                         vals[0]->bv_val, strlen(vals[0]->bv_val));
             mdata.firstname = strdup(vals[0]->bv_val);
             ldap_value_free_len(vals);
@@ -1688,7 +1688,7 @@ char *build_gecos(uxds_data_t mdata, LDA
         vals = ldap_get_values_len(ld, entry, "sn");
         if (vals[0]->bv_val != NULL) {
             if (debug)
-                fprintf(stderr, "%s : sn, len %lu\n", vals[0]->bv_val,
+                fprintf(stderr, "%s : sn, len %i\n", vals[0]->bv_val,
                         strlen(vals[0]->bv_val));
             mdata.lastname = strdup(vals[0]->bv_val);
             ldap_value_free_len(vals);
@@ -1697,7 +1697,7 @@ char *build_gecos(uxds_data_t mdata, LDA
     vals = ldap_get_values_len(ld, entry, "gecos");
     if (vals[0]->bv_val != NULL) {
         if (debug)
-            fprintf(stderr, "%s : gecos, len %lu\n", vals[0]->bv_val,
+            fprintf(stderr, "%s : gecos, len %i\n", vals[0]->bv_val,
                     strlen(vals[0]->bv_val));
         old_gecos = strdup(vals[0]->bv_val);
     }
