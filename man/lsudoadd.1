.TH lsudoadd 1 "February 1, 2008" uxdstools uxdstools

.SH NAME
lsudoadd \- Add SUDOer accounts in LDAP stores

.SH SYNOPSIS
.TP 9
lsudoadd [\-H <host URI>] [\-m <SASL mech>] [\-u <authcid>] [\-D <bind DN>] [\-p <passwd>] [\-P]

[\-U <user> | \-G <group>] [\-C <cmd>,...] [\-O <option>,...]

.SH DESCRIPTION
.ul
lsudoadd
is used to add a SUDOer account into an LDAP datastore.  The imported account includes all attributes neccesary to use sudo on UNIX systems.  It requires that the sudo.schema sudoers LDAP schema be loaded into your LDAP directory service.

SASL authentication support is available if OpenLDAP libraries are linked against Cyrus\-SASL and are intact at compile time. This is mostly untested (except GSSAPI) but should be working with any mech the server has available (depending on your local SASL install). Krb5/GSSAPI support is available if Heimdal kerberos libraries are avaliable at compile time. Upon authentication, a kerberos ticket can be obtained and placed in the default or a custom credentials cache, and used for subsequent authentication calls with this or other programs (or any GSSAPI enabled client for that matter) in the uxdstools suite.

The program takes arguments to fill in neccesary data in order to correctly create the SUDOer account.  This includes commands and options desired for the account.  The selected account must exist as a POSIX user or group the LDAP tree, and if group is selected the '%' is automatically prepended to the account name, signifying a group SUDOer.

.SH OPTIONS
.TP
\-D
.ul
DN

Distinguished name to used to bind to LDAP directory. If no SASL support is intact, this defaults to a simple
bind operation. This can also be used with a be used with a mech (see \-m below as an authorization bind ident
ity (authzid).
.TP
\-p
.ul
passwd

Use passwd as password for authentication (Simple or SASL).
.TP
\-P
Prompt for password, used instead of specifying the password on the command line. With GSSAPI support, this in
put will be used to obtain a kerberos tgt.
.TP
\-K
.ul
FILE:/path/to/x509_certificate

With GSSAPI enabled, this allows for rudimentary PK-INIT authentication using an x509 certificate.  At this time it does not accept passphrases for private keys.  It will gain a kadmin/changepw ticket for use in changing principal passwords. Requires -u <krb5Principal> argument.
.TP
\-H
.ul
host URI

LDAP server URI to access, optional as it default to what is in ldap.conf. "ldaps://" and "ldapi://" URIs are
OK, as long as your underlying OpenLDAP libs support this. e.g. "ldap://server.example.com"
.TP
\-m
.ul
mech

Mechanism used for SASL auth, e.g DIGEST-MD5, GSSAPI.
.TP
\-u
.ul
authcid

SASL auth identity used to gain access to the LDAP directory service. Format depends on the SASL mech being used... With GSSAPI no mech is required, this input will be used as the short principal name to gain a kerberos ticket granting ticket for auth.
.TP
\-r
.ul
realm

Realm for SASL identity, some callbacks need this.  Not really tested at this point.
.TP
\-c
.ul
ccache

Location for krb5 credentials cache. This can be a path, e.g. /tmp/krb5cc100 or preceded by 'METHOD:', as in FILE:/tmp/krb5cc100 or KCM:100. This is optional and if not selected will yield to the default kerberos context.
.TP
\-U 
.ul
user 

Name (uid attribute) of the POSIX user you wish to create a SUDOer account for.
.TP
\-G 
.ul
group 

Name (cn attribute) of the POSIX group you wish to create a SUDOer account for.  If selected, the arbitrary '%' is automatically prepended to the sudoRole and cn attributes of the SUDOer account, e.g. "group" becomes "%group", as sudo expects.
.TP
\-C
.ul  
sudoCommand(s)

Commands the users is allowed to run as root (or whatever user).  This populates the sudoCommand attribute with the input values.  If multiple commands are desired, then separate them with commas (if using ! to exclude commands enclose the whole string in
.ul
single
quotes): e.g. -C 'ALL,!/bin/sh,!/bin/ksh'  At least one command is required to create a SUDOer.
.TP
\-O
.ul
sudoOption(s)

Options within sudo assinged to the account. This populates the sudoOption attribute with the input values.  If multiple options are desired, then separate them with commas (if using ! to use excluding options enclose the whole string in
.ul
single
quotes): e.g. -C '!authenticate,env_reset'
.TP
\-v|\-\-version 

Shows the version info and exits.
.TP
\-h|\-\-help 

Shows verbose output of options and exits.
.TP
\-d  Shows some debugging output from the command.

.SH SUDOER STRUCTURE

    A default sudoer's ldif looks something like this:

    # %luserz, sudoers, unix, foobar.pvt
    dn: cn=%luserz,ou=sudoers,ou=unix,dc=foobar,dc=pvt
    objectClass: top
    objectClass: sudoRole 
    cn: %luserz
    sudoUser: %sysadmin
    sudoHost: ALL
    sudoCommand: /sbin/reboot
    sudoCommand: /sbin/halt
    sudoOption: !authenticate

    This sudoer is allowed to use halt and reboot without a password as root.

.SH AUTHOR
Michael Brown <mikal@mikro\-net.com>

